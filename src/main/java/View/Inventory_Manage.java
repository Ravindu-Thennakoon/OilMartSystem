/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


package View;
import Model.ItemDAO;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;
import Controller.ItemController;
import java.awt.event.*;
import java.util.List;
import Model.Item;





/**
 *
 * @author ravin
 */
public class Inventory_Manage extends javax.swing.JFrame {
    private JPopupMenu suggestionsPopup = new JPopupMenu();
private ItemDAO itemDAO = new ItemDAO();


  
    /**
     * Creates new form Inventory_Manage
     */
    public Inventory_Manage() {
     
        initComponents();
       this.setExtendedState(Inventory_Manage.MAXIMIZED_BOTH); // Maximize window
        this.setVisible(true);
        loadTableDataAsync();
        updateCount();
        stockCount();
        searchKey();
     
    }
    /*------------------------------------------------------------*/
    private void updateCount()
    {
         int count = ItemController.getItemCount();
       label_tot_stock.setText(""+count);
    }
      /*------------------------------------------------------------*/
    private void stockCount()
    {
       int[] stockCounts = ItemController.getStockCounts();
        stock_counts.setText("" + stockCounts[0]);
        lbloutOfStock.setText("" + stockCounts[1]);
        lbllowstock.setText("" + stockCounts[2]);
  
    }
  /*------------------------------------------------------------*/
    private void loadAllItems() {
    List<Item> allItems = ItemController.getAllItems();
    populateTable(allItems);
}

  /*------------------------------------------------------------*/   
private void filterItems() {
    String itemName = txtSearch.getText().trim();
    String brand = txtVehicle.getText().trim();
    String category = txtVolumn.getText().trim();

    List<Item> filteredItems = ItemController.searchItems(itemName, brand, category);
    populateTable(filteredItems);
}
  /*------------------------------------------------------------*/
private void searchKey()
{
          KeyAdapter searchKeyListener = new KeyAdapter() {
    @Override
    public void keyReleased(KeyEvent e) {
        filterItems();
    }
  

};
          txtSearch.addKeyListener(searchKeyListener);
txtVehicle.addKeyListener(searchKeyListener);
txtVolumn.addKeyListener(searchKeyListener); 
}
  /*------------------------------------------------------------*/



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_inventory = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        lbllowstock = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        stock_counts = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        lbloutOfStock = new javax.swing.JLabel();
        lbl_tot_stock = new javax.swing.JPanel();
        label_tot_stock = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        clr_filter = new javax.swing.JButton();
        btn_insert = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        btn_save = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        txtVehicle = new javax.swing.JTextField();
        txtVolumn = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(1910, 1080));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        table_inventory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Code", "Item Name", "Brand", "Category", "Vehicle Type", "Viscosity Grade", "API Standard", "Volumn", "Unit", "Package Type", "Batch No", "Expiry Date", "Cost Price", "Selling Price", "Discount", "Stock Quantity", "Supplier"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table_inventory);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 77, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        lbllowstock.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lbllowstock.setText("jLabel5");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addComponent(lbllowstock, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(lbllowstock)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        stock_counts.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        stock_counts.setText("jLabel5");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(stock_counts, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(stock_counts)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        lbloutOfStock.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lbloutOfStock.setText("jLabel5");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(lbloutOfStock, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(lbloutOfStock)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        lbl_tot_stock.setBackground(new java.awt.Color(255, 255, 255));
        lbl_tot_stock.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        label_tot_stock.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        label_tot_stock.setText("jLabel5");

        javax.swing.GroupLayout lbl_tot_stockLayout = new javax.swing.GroupLayout(lbl_tot_stock);
        lbl_tot_stock.setLayout(lbl_tot_stockLayout);
        lbl_tot_stockLayout.setHorizontalGroup(
            lbl_tot_stockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lbl_tot_stockLayout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(label_tot_stock, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
        lbl_tot_stockLayout.setVerticalGroup(
            lbl_tot_stockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lbl_tot_stockLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(label_tot_stock)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Total Products");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("In Stock");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Low Stock");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Out Of Stock");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel16.setText("Volumn");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel17.setText("Vehicle Type");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel18.setText("Brand");

        clr_filter.setText("Clear Filter");
        clr_filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clr_filterActionPerformed(evt);
            }
        });

        btn_insert.setText("Insert");
        btn_insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_insertActionPerformed(evt);
            }
        });

        jButton8.setText("Update");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Delete");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        btn_save.setText("Save");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_insert))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(560, 560, 560)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)
                                .addComponent(txtVehicle, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(94, 94, 94)
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(txtVolumn, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58)
                                .addComponent(clr_filter, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                                .addComponent(btn_save)
                                .addGap(26, 26, 26)
                                .addComponent(jButton8)
                                .addGap(32, 32, 32)
                                .addComponent(jButton9)
                                .addGap(72, 72, 72))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(jLabel16)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_tot_stock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(62, 62, 62)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13))
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel3)))
                        .addGap(62, 62, 62)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbl_tot_stock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1))))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clr_filter)
                    .addComponent(jButton8)
                    .addComponent(jButton9)
                    .addComponent(btn_save)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtVehicle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtVolumn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel17)
                    .addComponent(jLabel16))
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(btn_insert))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void showSuggestions(String text) {
    suggestionsPopup.removeAll();
    List<String> results = itemDAO.searchItemNames(text);

    for (String name : results) {
        JMenuItem item = new JMenuItem(name);
        item.addActionListener(ev -> {
            txtSearch.setText(name);
            suggestionsPopup.setVisible(false);
        });
        suggestionsPopup.add(item);
    }

    if (!results.isEmpty()) {
        suggestionsPopup.show(txtSearch, 0, txtSearch.getHeight());
    } else {
        suggestionsPopup.setVisible(false);
    }
}
  /*------------------------------------------------------------*/
private void populateTable(List<Item> items) {
    DefaultTableModel model = (DefaultTableModel) table_inventory.getModel();
    model.setRowCount(0); // clear existing rows

    for (Item item : items) {
        model.addRow(new Object[] {
            item.getItemCode(),
            item.getItemName(),
            item.getBrand(),
            item.getCategory(),
            item.getVehicleType(),
            item.getViscosityGrade(),
            item.getApiStandard(),
            item.getVolumn(),
            item.getUnit(),
            item.getPackageType(),
            item.getBatchNo(),
            item.getExpiryDate(),
            item.getCostPrice(),
            item.getSellingPrice(),
            item.getDiscount(),
            item.getStockQty(),
            item.getSupplier()
        });
    }
}

  /*------------------------------------------------------------*/
    private void btn_insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_insertActionPerformed
        DefaultTableModel model = (DefaultTableModel) table_inventory.getModel();

    int nextCode = ItemController.getNextItemCode(); // fetch from DB

    // create an empty row with 17 columns
    Object[] row = new Object[17];
    row[0] = nextCode; // assign item_code to column 0

    model.addRow(row);
    }//GEN-LAST:event_btn_insertActionPerformed
  /*------------------------------------------------------------*/
    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
     DefaultTableModel model = (DefaultTableModel) table_inventory.getModel();
    int row = table_inventory.getSelectedRow();

    if (row == -1) {
        JOptionPane.showMessageDialog(this, "Please select a row first!");
        return;
    }

    // Get values from row
    String itemCodeStr     = model.getValueAt(row, 0).toString().trim();
    String itemName        = model.getValueAt(row, 1).toString();
    String brand           = model.getValueAt(row, 2).toString();
    String category        = model.getValueAt(row, 3).toString();
    String vehicleType     = model.getValueAt(row, 4).toString();
    String viscosity       = model.getValueAt(row, 5).toString();
    String apiStandard     = model.getValueAt(row, 6).toString();
    String volumeStr       = model.getValueAt(row, 7).toString();
    String unit            = model.getValueAt(row, 8).toString();
    String packageType     = model.getValueAt(row, 9).toString();
    String batchNo         = model.getValueAt(row, 10).toString();
    String expiryDateStr   = model.getValueAt(row, 11).toString();
    String costPriceStr    = model.getValueAt(row, 12).toString();
    String sellingPriceStr = model.getValueAt(row, 13).toString();
    String discountStr     = model.getValueAt(row, 14).toString();
    String stockQtyStr     = model.getValueAt(row, 15).toString();
    String supplier        = model.getValueAt(row, 16).toString();

    try {
        int itemCode = Integer.parseInt(itemCodeStr);
        double volume = Double.parseDouble(volumeStr);
        double costPrice = Double.parseDouble(costPriceStr);
        double sellingPrice = Double.parseDouble(sellingPriceStr);
        double discount = Double.parseDouble(discountStr);
        int stockQty = Integer.parseInt(stockQtyStr);
        java.sql.Date expiryDate = java.sql.Date.valueOf(expiryDateStr);

        Item item = new Item(
            itemCode, itemName, brand, category, vehicleType,
            viscosity, apiStandard, volume, unit, packageType,
            batchNo, expiryDate, costPrice, sellingPrice,
            discount, stockQty, supplier
        );

        // 🔎 Check in DB if this item_code exists
        if (ItemController.exists(itemCode)) {
            ItemController.updateItem(item);
        } else {
            ItemController.insertItem(
                itemName, brand, category, vehicleType,
                viscosity, apiStandard, volumeStr, unit, packageType,
                batchNo, expiryDateStr, costPriceStr, sellingPriceStr,
                discountStr, stockQtyStr, supplier
            );
        }

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Invalid input: " + e.getMessage());
        return;
    }
    

    // Refresh table
    loadTableDataAsync();
     updateCount();
    
    
    }//GEN-LAST:event_btn_saveActionPerformed
  /*------------------------------------------------------------*/
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        int row = table_inventory.getSelectedRow();

    if (row == -1) {
        JOptionPane.showMessageDialog(this, "Please select a row to update!");
        return;
    }

    // Current model
    DefaultTableModel model = (DefaultTableModel) table_inventory.getModel();

    // Define the column names explicitly
    String[] columnNames = {
        "Item Code", "Item Name", "Brand", "Category", "Vehicle Type",
        "Viscosity", "API Standard", "Volume", "Unit", "Package Type",
        "Batch No", "Expiry Date", "Cost Price", "Selling Price",
        "Discount", "Stock Qty", "Supplier"
    };

    // Create editable model (except Item Code column)
    DefaultTableModel editableModel = new DefaultTableModel(model.getDataVector(), 
                                                            new java.util.Vector<>(java.util.Arrays.asList(columnNames))) {
        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return columnIndex != 0; // allow editing all except Item Code
        }
    };

    table_inventory.setModel(editableModel);
    }//GEN-LAST:event_jButton8ActionPerformed
  /*------------------------------------------------------------*/
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
       DefaultTableModel model = (DefaultTableModel) table_inventory.getModel();
    int row = table_inventory.getSelectedRow();

    if (row == -1) {
        JOptionPane.showMessageDialog(this, "Please select a row first!");
        return;
    }

    String itemCodeStr = model.getValueAt(row, 0).toString().trim();

    int confirm = JOptionPane.showConfirmDialog(this, 
        "Are you sure you want to delete this item?", 
        "Confirm Delete", JOptionPane.YES_NO_OPTION);

    if (confirm == JOptionPane.YES_OPTION) {
        try {
            int itemCode = Integer.parseInt(itemCodeStr);
            ItemController.deleteItem(itemCode);
            loadTableDataAsync(); // Refresh table
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Invalid item code: " + e.getMessage());
        }
    }
     updateCount();
    }//GEN-LAST:event_jButton9ActionPerformed
  /*------------------------------------------------------------*/
    private void clr_filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clr_filterActionPerformed
         txtSearch.setText("");
    txtVehicle.setText("");
    txtVolumn.setText("");
    loadAllItems();  
    }//GEN-LAST:event_clr_filterActionPerformed
  /*------------------------------------------------------------*/
    private void loadTableDataAsync() {
    SwingWorker<List<Item>, Void> worker = new SwingWorker<>() {
        @Override
        protected List<Item> doInBackground() throws Exception {
            // Background thread: fetch items from DB
            return ItemController.getAllItems();
        }

        @Override
        protected void done() {
            try {
                List<Item> items = get();

                // Define your table columns
                String[] columnNames = {
                    "Item Code", "Item Name", "Brand", "Category", "Vehicle Type",
                    "Viscosity Grade", "API Standard", "Volume", "Unit",
                    "Package Type", "Batch No", "Expiry Date", "Cost Price",
                    "Selling Price", "Discount", "Stock Qty", "Supplier"
                };

                // Create a read-only model
                DefaultTableModel model = new DefaultTableModel(columnNames, 0) {
                    @Override
                    public boolean isCellEditable(int row, int column) {
                      return row == getRowCount() - 1; // only the last row editable
                    }
                };

                // Assign model to the table
                table_inventory.setModel(model);

                // Fill rows
                for (Item item : items) {
                    Object[] row = new Object[] {
                        item.getItemCode(),
                        item.getItemName(),
                        item.getBrand(),
                        item.getCategory(),
                        item.getVehicleType(),
                        item.getViscosityGrade(),
                        item.getApiStandard(),
                        item.getVolumn(),
                        item.getUnit(),
                        item.getPackageType(),
                        item.getBatchNo(),
                        item.getExpiryDate().toString(),
                        item.getCostPrice(),
                        item.getSellingPrice(),
                        item.getDiscount(),
                        item.getStockQty(),
                        item.getSupplier()
                    };
                    model.addRow(row);
                }

            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Failed to load data: " + e.getMessage());
            }
        }
    };

    worker.execute();
}
  /*------------------------------------------------------------*/


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventory_Manage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventory_Manage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventory_Manage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventory_Manage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inventory_Manage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_insert;
    private javax.swing.JButton btn_save;
    private javax.swing.JButton clr_filter;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_tot_stock;
    private javax.swing.JPanel lbl_tot_stock;
    private javax.swing.JLabel lbllowstock;
    private javax.swing.JLabel lbloutOfStock;
    private javax.swing.JLabel stock_counts;
    private javax.swing.JTable table_inventory;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtVehicle;
    private javax.swing.JTextField txtVolumn;
    // End of variables declaration//GEN-END:variables
}
